<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ricardo Lopes</title>
    <description>Hacker, tech enthusiast, learner, judo black belt and occasional blogger</description>
    <link>http://ricardolopes.net</link>
    <atom:link href="http://ricardolopes.net/feed.xml" rel="self" type="application/rss+xml" />
    
      <item>
        <title>Setting up a hacker&#39;s blog with Jekyll</title>
        <description>&lt;p&gt;If you’re looking for a blogging platform or framework to start sharing your thoughts with the rest of the world, there’s no shortage of options to consider. My previous blog was a self-hosted Wordpress install, a pretty popular option, which &lt;a href=&quot;/blog/a-postmortem-of-my-wordpress-blog&quot;&gt;turned out to be a disaster for me&lt;/a&gt;. Other popular options include regular &lt;a href=&quot;https://wordpress.com/&quot;&gt;Wordpress&lt;/a&gt;, &lt;a href=&quot;https://medium.com/&quot;&gt;Medium&lt;/a&gt; or even &lt;a href=&quot;https://www.tumblr.com/&quot;&gt;Tumblr&lt;/a&gt;. However, if you want your blog to exercise your hacking skills, then &lt;a href=&quot;http://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt; is the way to go.&lt;/p&gt;

&lt;p&gt;Jekyll is a static websites and blogs generator that is run from the command line. What this means is that instead of setting up a database of posts, comments, etc. and a webapp that connects to that database to generate dynamic webpages, it simply generates all the necessary pages upfront. This means that you don’t have to worry about databases, caching, running live server code, and so on: it’s as simple and practical as it can get.&lt;/p&gt;

&lt;p&gt;I wouldn’t recommend it to anyone with no programming background, however. You’re expected to deal with YAML files to change the website settings, HTML with Liquid tags to build the structure of every page, Ruby to develop or tweak any plugins and Markdown (or an alternative, like Textile or raw HTML) to write any post. Also, generating the website after every change (in design, structure, or simply after every new post) is done through the command line, and after that you still have to upload the generated files to your server.&lt;/p&gt;

&lt;p&gt;However, for the enthusiastic developer, this means that you have full control over the entire process. It also means that dealing with your blog feels closer than ever to hacking one of your projects. You can, in fact, never leave your favourite text editor: even for regular blog posts, I get to do everything with vim.&lt;/p&gt;

&lt;p&gt;Enough talk already. If I got your interest, let’s get hacking. This is a Ruby tutorial, so I’m assuming that you have Ruby installed and are comfortable enough using it.&lt;/p&gt;

&lt;h2 id=&quot;setting-up-jekyll&quot;&gt;Setting up Jekyll&lt;/h2&gt;

&lt;p&gt;Jekyll is a Ruby gem, so its installation is what you’d expect:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
gem install jekyll
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Now you have two options: you either ask Jekyll to build you a complete new site from its default template, or you just go ahead and build your own from scratch. For the former, you’d just need to type:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
jekyll new yourwebsitename
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;After that, you’d have your brand new website in the newly created &lt;code&gt;yourwebsitename&lt;/code&gt; directory. From that directory, you’d only need to type &lt;code&gt;jekyll serve&lt;/code&gt; to generate the static files and be able to browse it.&lt;/p&gt;

&lt;p&gt;However, that doesn’t feel like hacking at all. So fire up your favourite text editor and get yourself a cup of coffee, because we’re building it the fun way.&lt;/p&gt;

&lt;h2 id=&quot;index&quot;&gt;Index&lt;/h2&gt;

&lt;p&gt;A typical Jekyll blog is structured into specific directories inside of the root project directory. So start by creating a directory for your new blog, where all the code will live.&lt;/p&gt;

&lt;p&gt;All the generated static files will go to the directory &lt;code&gt;_site&lt;/code&gt;. So if you create a new &lt;code&gt;index.html&lt;/code&gt; in your project root and run &lt;code&gt;jekyll serve&lt;/code&gt;, a &lt;code&gt;_site/index.html&lt;/code&gt; will be created. While that Jekyll server is running, you can view that generated page at &lt;code&gt;localhost:4000&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;For our new blog’s index, we’ll want to iterate through our list of blog posts and show their title and excerpt:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;---
---

{% for post in site.posts %}
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;h2&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;{{ post.url }}&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;{{ post.title }}&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;
  {{ post.excerpt }}
{% endfor %}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The templating tags you can see are Liquid tags. You use &lt;code&gt;{% text %}&lt;/code&gt; for logic like iterating a list (like ERB’s &lt;code&gt;&amp;lt;% text %&amp;gt;&lt;/code&gt;, and &lt;code&gt;{{ text }}&lt;/code&gt; for text output (like ERB’s &lt;code&gt;&amp;lt;%= text %&amp;gt;&lt;/code&gt;). Another relevant remark about the code above is that you don’t need to surround the excerpt with &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; tags: its output already includes them.&lt;/p&gt;

&lt;p&gt;In this code we can see another important part of Jekyll: the front matter. It’s the block defined by the triple dashes, and it holds any configuration, in YAML, that you might need in a page. Right now we’re not needing anything, so we’ll just leave it empty. We can’t just remove it, because otherwise the Liquid tags won’t get parsed by Jekyll (it would just be treated as a regular, static HTML file).&lt;/p&gt;

&lt;p&gt;Trying to check the generated site with this code won’t show anything interesting. That’s because our blog still has no posts to display. Let’s fix that.&lt;/p&gt;

&lt;h2 id=&quot;posts&quot;&gt;Posts&lt;/h2&gt;

&lt;p&gt;The blog posts must be stored in the &lt;code&gt;_posts&lt;/code&gt; directory. Their filename should be their publication date followed by their intended URL identifier (slug). This ensures that you get your posts organised by date and you can immediatelly identify any of their files, while it also gives two important bits of information to Jekyll to use. So if you want to create your Hello World post, you would name it something like &lt;code&gt;_posts/2015-02-01-hello-world.md&lt;/code&gt; (in this tutorial I’m assuming we’re formatting our posts with Markdown). Here’s how that file would look like:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;---
title: Hello World!
---

Welcome to my new **blog**!&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This time we have a use for the front matter: for a blog post we need to define a title. It’s not necessary to include the post publication date and slug, because Jekyll already gets them from the filename.&lt;/p&gt;

&lt;p&gt;Browsing the generated site should now start to get more interesting. You should now be able to see your new post listed in the blog index and be able to navigate to its page.&lt;/p&gt;

&lt;p&gt;However, everything still seems too simple and ugly. It’s time to give our blog a proper look.&lt;/p&gt;

&lt;h2 id=&quot;layouts&quot;&gt;Layouts&lt;/h2&gt;

&lt;p&gt;In Jekyll you theme your blog by providing a list of layouts. Those are stored in the &lt;code&gt;_layouts&lt;/code&gt; directory. Let’s start with a default layout &lt;code&gt;_layouts/default.html&lt;/code&gt; to apply to all our existing pages:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;---
---

&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;lang=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;en&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;My blog&lt;span class=&quot;nt&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;style=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;max-width: 800px; margin: 20px auto&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;h1&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;/&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;My blog&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;

      {{ content }}

    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;We now have a slightly better design and the blog title in every page, linking to the blog index. The contents of every page will be replacing that &lt;code&gt;{{ content }}&lt;/code&gt;. And if you try to browse the generated site… you’ll see that nothing changed and the layout isn’t being used.&lt;/p&gt;

&lt;p&gt;To make every page use this new layout, we have to specify it in their front matters. So your index will have to change into:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;---
layout: default
---

{% for post in site.posts %}
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;h2&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;{{ post.url }}&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;{{ post.title }}&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;
  {{ post.excerpt }}
{% endfor %}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And, likewise, the front matter of your post will also need to be updated:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;---
layout: default
title: Hello World!
---

Welcome to my new **blog**!&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You should now be able to see the changes in the generated site. The design is still not great, but styling webpages is out of scope of this tutorial. Our blog post, however, still looks incomplete, without its title and publication date. We can fix that by introducing a new layout, just for blog posts. Fortunately, specific layouts can reuse more generic ones, to avoid duplicating a lot of code. Here’s how a &lt;code&gt;_layouts/post.html&lt;/code&gt; could look like:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;---
layout: default
---

&lt;span class=&quot;nt&quot;&gt;&amp;lt;h2&amp;gt;&lt;/span&gt;{{ page.title }}&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;{{ page.date | date_to_string }}&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
{{ content }}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Notice that by setting a layout to a layout we avoid a lot of code repetition. Now if you change the layout in the post file from &lt;code&gt;default&lt;/code&gt; into &lt;code&gt;post&lt;/code&gt;, you should be able to see the post title and publication date in its page.&lt;/p&gt;

&lt;p&gt;Also, you might have noticed the new &lt;code&gt;| date_to_string&lt;/code&gt;. The &lt;code&gt;|&lt;/code&gt; is used in Liquid to apply the filter specified on the right to the element on the left. So in this example we’re applying the &lt;code&gt;date_to_string&lt;/code&gt; filter to &lt;code&gt;post.date&lt;/code&gt;, which converts the post publication date into a nicer to read string.&lt;/p&gt;

&lt;p&gt;So now we have a blog index, posts and a theme. Things are starting to look better, and you’re now in a position to start adding elements like a sidebar, Google Analytics, Disqus comments and anything else you want. So now let’s finish with some cleanup, to help with future improvements.&lt;/p&gt;

&lt;h2 id=&quot;configurations&quot;&gt;Configurations&lt;/h2&gt;

&lt;p&gt;In our defaut layout we’re hardcoding the name of our blog twice. If we want to add elements like an RSS feed, semantic annotations or others, chances are we’re going to have to hardcode it again. The same applies for other information like blog author, description and social media links.&lt;/p&gt;

&lt;p&gt;Fortunately, there is a place to store all this information: the configurations file, which acts like the ultimate front matter of the whole site. So create the &lt;code&gt;_config.yml&lt;/code&gt; file in the project root:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;name: My blog
author: Ricardo Lopes
twitter: ricardoplopes&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now we can access any of these variables through the &lt;code&gt;site&lt;/code&gt; object. We can now change the default layout to something more interesting (and maintainable):&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;---
---

&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;lang=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;en&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;{{ site.name }}&lt;span class=&quot;nt&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;style=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;max-width: 800px; margin: 20px auto&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;h1&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;/&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;{{ site.name }}&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;

      {{ content }}

      &lt;span class=&quot;nt&quot;&gt;&amp;lt;hr&amp;gt;&lt;/span&gt;
      © {{ site.time | date: &amp;#39;%Y&amp;#39; }} {{ site.author }}.
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;https://twitter.com/{{ site.twitter }}&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Follow me on Twitter&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;whats-next&quot;&gt;What’s next&lt;/h2&gt;

&lt;p&gt;So far we’ve only really scratched the surface on what Jekyll can do for our blog. The current structure should be something like:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;_config.yml
_layouts
    default.html
    post.html
_posts
    2015-02-01-hello-world.md
_site
_index.html&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;However, there’s a lot more hacking that can be done. Some examples are building an RSS feed, paginating the index page, getting better URLs, better theming and adding categories and tags. Also, although you can go ahead and upload the generated files to your personal server to get your blog online, it’s still worth to discuss some alternatives to ease that process.&lt;/p&gt;

&lt;p&gt;Unfortunately, it all starts to be too much for a single blog post. So expect to see all those examples explained in future tutorials, and don’t forget to &lt;a href=&quot;http://feeds.feedburner.com/ricardolopes/blog&quot;&gt;subscribe&lt;/a&gt; to get them as soon as they’re published. In the meantime, my blog’s source code is open, so you can learn from it and get some ideas through its &lt;a href=&quot;https://github.com/rplopes/ricardolopes.net&quot;&gt;Github project&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Sun, 01 Feb 2015 00:00:00 +0000</pubDate>
        <link>http://ricardolopes.net/blog/setting-up-a-hackers-blog-with-jekyll</link>
        <guid isPermaLink="true">http://ricardolopes.net/blog/setting-up-a-hackers-blog-with-jekyll</guid>
        
        <category>Jekyll</category>
        
        <category>Ruby</category>
        
        <category>blogging</category>
        
        <category>HTML</category>
        
        
        <category>tutorial</category>
        
      </item>
    
      <item>
        <title>What Windows 8 could have been</title>
        <description>&lt;p&gt;&lt;em&gt;&lt;strong&gt;Disclaimer:&lt;/strong&gt; This blog post was first published on the 25th of November of 2012. This means that most of its content might no longer be up-to-date. This was published in my previous blog, which has &lt;a href=&quot;/blog/a-postmortem-of-my-wordpress-blog&quot;&gt;met an unfortunate end&lt;/a&gt;, and is being reposted now as an attempt to resurface some of the most popular posts that have been lost. After the very recent announcement by Microsoft about the new Windows 10, this seems to be an interesting time to bring back this particular post.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2015-01-23-w8.png&quot; alt=&quot;Windows 8 screenshot&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This post was supposed to be yet another Windows 8 review but, as I’ve gained experience with the latest Microsoft OS, I saw the potential for something a little more interesting. I’ve been using Windows 8 as the only OS in my main computer since it was officially released by Microsoft, so I might say I have some experience, now, to tell you a thing or two about it that you probably missed in other reviews. I’ve already used Windows, Mac and Linux as my primary OS (and I tend to change it quite frequently), and I find advantages and disadvantages in all of them. I’m pretty “agnostic” in most technology debates, and OSs aren’t an exception, so these thoughts aren’t distorted by fanboy opinions. I didn’t do a simple review not only because the Internet is full of it (really, I’m not even posting any links), but because my continuous usage of this new OS kept bugging me more and more about very specific details. So I’ll skip the typical suspense and just tell you my quick opinion about it, so I can discuss what I see as the most pressing issue: what Windows 8 could have been.&lt;/p&gt;

&lt;p&gt;Firstly, I know many people don’t agree with me, but I actually think Microsoft changed the game with Windows 8 and the Surface. The notion of converging the laptop and tablet experience seems almost intuitive to me. As you might already know, tablets are the latest revolution in computing and are slowly throwing laptops to oblivion as once laptops did to desktop PCs (OK, I know it’s not that simple, but when we look at market shares there’s no doubt the landscape is changing). Tablets are also more portable than the thinnest ultrabooks, have a more intuitive and friendly input, don’t have the dreaded noisy fans, have better communication options and so on (I could go on listing the advantages of tablets over any laptop, but I guess I made my point already). So isn’t it silly that we’re still using them just as consumption devices (read: overpriced toys)? Is the great revolution in computing really only worth it for browsing Facebook and throwing some birds at evil pigs?&lt;/p&gt;

&lt;p&gt;The answer, of course, is no. If these devices are so much better than their ancestors, then we must be able to switch and leave the old laptops behind. Some power users might not be able to do it, but that’s exactly what happened in the transition from desktop PCs to laptops anyway. Apple has been very careful in this matter: they have slowly improved iOS to meet more demands and updated Mac OS to be more iOS-like. They’re basically doing baby steps for converging the two OSs, cautious not to make a very risky move. I’m still very curious about what the conclusion of that convergence might look like. Microsoft, on the other hand, went all-in about the matter and evolved from a pure PC OS to a completely hybrid, both tablet-friendly and “traditional”.&lt;/p&gt;

&lt;p&gt;In my opinion, and this might be controversial, Microsoft decided, for a change, to be the innovator and to push to the market a concept that is probably ahead of its time. They were so proud of their concept, they even build their own tablet/laptop hybrid just so they could show the full picture of their envisioned game changer product. This move is as refreshing as it is unexpected. So, as you can see by now, Windows 8 and the tablet/laptop hybrids approach have really caught my eye and promise to be a welcome revolution brought by an unexpected player.&lt;/p&gt;

&lt;p&gt;So… what could possibly go wrong? Here are some of the details I’ve been struggling with lately.&lt;/p&gt;

&lt;h2 id=&quot;affordances&quot;&gt;Affordances&lt;/h2&gt;

&lt;p&gt;In interaction design, affordance is the quality of an element to display to a user how it is supposed to be used. Imagine a door with no signs and with equal handles on both sides. That’s an example of poor affordance, since you don’t know if you’re supposed to push it or pull it. A door with better affordance would have the handle only in the side where you needed to pull and probably a sign in each side displaying the correct action.&lt;/p&gt;

&lt;p&gt;The Modern UI design aka Windows Store design aka Metro style design is, in my opinion, a nice UI that makes Windows Phone 7 and 8 look much more fresh and lively than the big guys iOS and Android. However, I’m not so sure about it in tablets and specially on regular PCs. One of its major advantages, the flat UI that strips down the unnecessary and focuses on content, is also one of its major flaws, because you’re also losing some important elements that weren’t just there for decoration. Don’t agree?&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2015-01-23-w8-settings.png&quot; alt=&quot;Windows 8 affordances example&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This image is showing two different elements from the same screen (not in their actual position, just next to each other in this picture for comparison). The one on the top is just a title with no action on click, and the one in the bottom is a button to a settings page (although we’re already in a settings panel, and another button in the same panel already points us to the Control Panel, another settings tool).&lt;/p&gt;

&lt;p&gt;I could add more examples, but I hope you got the idea. Cleaning the UI is a very good idea, but you must do it with caution. “Make it as simple as possible, but not simpler”.&lt;/p&gt;

&lt;h2 id=&quot;the-best-of-two-worlds&quot;&gt;The best of two worlds?&lt;/h2&gt;

&lt;p&gt;One of Windows 8′s most ambitious promises is the convergence of desktop and tablet experiences. As I said, I’m a big fan of that concept and I believe that’s a trend to follow. But a concept is one thing, execution is another. My ideal use case would be something like:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;I pick my tablet for working on the go. Since I don’t have paperwork nor a cumbersome laptop to carry, travelling with everything I need for work (just a tablet) is easier than ever. In those free times I can just turn on my tablet and browse my favourite websites, check my email and so on. When I get to my office I just link the Bluetooth keyboard and mouse and the HDMI display, start the traditional environment and fire up the MS Office suite, the IDE, etc.&lt;/p&gt;

  &lt;p&gt;Next day I decide to do some work at a coffee shop, so I just bring the tablet and a keyboard (a Surface keyboard would add no bulk to the pack, and a keyboard dock like what we see in Asus’s offerings would, in a worst case scenario, make me feel like I’m carrying a thin netbook).&lt;/p&gt;

  &lt;p&gt;When going to meetings, presentations or others I simply carry the tablet and use it with the onscreen keyboard, since I won’t be typing long sequences of text. In between, I think about my laptop and wonder when was the last time I used that heavy, noisy and awkward machine.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This use case is what I think when I see new hybrids in the market running full-blown OSs in a tablet form and when I hear Microsoft state how Windows 8 promises to deliver the best of both worlds. Unfortunately, that’s not what’s happening.&lt;/p&gt;

&lt;p&gt;Firstly, Windows RT, a dumbed-down version of Windows 8 developed to run on ARM processors, miserably fails to live up to that promise, as you won’t be able to run legacy apps in it (read: you can’t install typical desktop applications, like the ones you absolutely must have for your job).&lt;/p&gt;

&lt;p&gt;Also, when using a tablet with no mouse or keyboard, this ideal vision means not interacting with the traditional desktop and its windows, as they’re not the most touch friendly interfaces you’ll see. So it’s too bad that actions such as file management and configuring some settings have to be done in the desktop environment. I can’t help but think that Microsoft’s tight schedule for Windows 8 left many holes in the OS, and this lack of support for the continuous use of the tablet environment shows many of them.&lt;/p&gt;

&lt;p&gt;These holes in the OS aren’t an exclusive of the tablet interface. As an example, in the desktop mode hitting the Networks taskbar icon brings a panel in line with the new design, but hitting the Sound or Power taskbar icons still brings the old style popup. Also, when using the desktop environment, the Charms bar has close to no functionality (but it still shows up when hitting non-configurable hot corners). There are many more rough corners that still need to be polished if this is to look like a finished product.&lt;/p&gt;

&lt;p&gt;Finally, the integration of these two poorly-implemented worlds is nothing but disappointment. If you like a Metro application, you can’t run it as a window in the desktop environment (nor can you go full-screen in most desktop applications). If you open a file in one of the environments, the only way to move it to the other environment is to open it again manually using another application. The only way to see two Metro apps at once (or any Metro app while using the desktop interface) is by snapping one of them to the left or right of the screen. However, you have no control of the size of each app, and you can’t have two documents side by side, since the distributed space isn’t 50%-50%, but more like 75%-25%.&lt;/p&gt;

&lt;h2 id=&quot;apps-apps-apps&quot;&gt;Apps, apps, apps&lt;/h2&gt;

&lt;p&gt;At the end of the day, what really matters is the applications. That’s why most users prefer Mac OS or Linux over Windows, but when you look at market shares that’s not what it looks like. However, with this new OS Microsoft seems to be trying to get rid of its huge market advantage.&lt;/p&gt;

&lt;p&gt;As I’ve stated before, there’s not much integration between the two different environments of Windows 8. So, while you have a huge collection of legacy apps in the traditional one, you’ll feel the emptiness of options in the newest one. If desktop apps could integrate with the tablet mode this wouldn’t be such a big issue, because we’d have something to cover that emptiness while the new apps ecosystem was being developed. But we don’t, so if you’re like me you’ll probably want to make use of that awesome new environment, but will find no reason for it and eventually give up.&lt;/p&gt;

&lt;p&gt;Things get pretty ugly if you consider Windows RT instead of 8, because it also has a desktop mode but lacks the support for legacy apps. So yes, the market leader that has built its success on top of its huge apps ecosystem has just started a new one from scratch and one of the versions of its newest OS doesn’t even support the old one.&lt;/p&gt;

&lt;p&gt;Also, if this new desktop/tablet mix in the same OS serves as a “bridge” from the old ecosystem to the new, I can’t figure a simple reason for Microsoft to launch the Surface with RT before launching the Surface with 8. They basically launched a device with virtually no ecosystem and waited to later launch a similar device with support for all Windows applications. That’s like trying to build a whole village in a desert island and only later building a bridge to it. I wonder how much has Microsoft lost with this new, unpopulated village already.&lt;/p&gt;

&lt;p&gt;Finally, if we look to the Metro apps that come with the OS, there’s also some aspects that make me think this could have gone a totally different way. The built-in calendar app couldn’t import all calendars from my Google account (in fact, it could only import the personal one), so it’s useless for me. The messaging app can’t send new messages if I’m set as invisible, and can’t get them from contacts that show up as offline, so this one’s also useless for me. Thanks to the poor integration between the two environments, I can’t get a mini player of the XBox Music app (only a snapped panel from top to bottom that shrinks my horizontal desktop area). These are just some examples of the poor job that leave us early adopters with little incentive to keep trying the new environment.&lt;/p&gt;

&lt;h2 id=&quot;to-sum-up&quot;&gt;To sum up&lt;/h2&gt;

&lt;p&gt;Please don’t get me wrong: I love Windows 8′s concept and I share (more or less) Microsoft’s vision for the future of computers. If this was the typical review, I’d spend more time highlighting some good implementations and how I believe it’s the right direction. I might even have recommended the upgrade. However, my goal is to highlight what I find poorly implemented in such a great concept.&lt;/p&gt;

&lt;p&gt;Thanks to this whole notebook/tablet hybrid concept, I’ve started to look at the latest ultrabooks as kind of obsolete devices. They don’t have touch screens, it’s impossible to use them while walking without looking awkward, and so forth. The same goes for all Apple’s notebook options (that’s probably the reason why most Apple fans don’t agree with this vision). However, after quite some time with Windows 8, I fear we don’t have a strong alternative yet.  Yes, this is definitely an important step in that direction, but it’s still looking too immature, for now. Windows 8 seems to have suffered a lot from its tight schedule and, thanks to this incomplete effort, we now have a vision of what’s to come, but are left with a poor demo of it.&lt;/p&gt;

&lt;p&gt;All in all, this could have been a new revolution in the way we use our computers. As it stands, it’s nothing but a glimpse of what that revolution might look like. Maybe they’ll get it right in an hypothetical Windows 9. After all, Microsoft is known for releasing great versions of Windows after disappointing ones, and disappointing versions after great ones (and so far, this pattern seems unchanged). Or maybe Apple will get it right first.&lt;/p&gt;
</description>
        <pubDate>Fri, 23 Jan 2015 00:00:00 +0000</pubDate>
        <link>http://ricardolopes.net/blog/what-windows-8-could-have-been</link>
        <guid isPermaLink="true">http://ricardolopes.net/blog/what-windows-8-could-have-been</guid>
        
        <category>Windows</category>
        
        <category>Microsoft</category>
        
        <category>UX</category>
        
        
        <category>rant</category>
        
      </item>
    
      <item>
        <title>My experience on free web hosts</title>
        <description>&lt;p&gt;&lt;em&gt;&lt;strong&gt;Disclaimer:&lt;/strong&gt; This blog post was first published on the 24th of January of 2011. This means that most of its content might no longer be up-to-date. This was published in my previous blog, which has &lt;a href=&quot;/blog/a-postmortem-of-my-wordpress-blog&quot;&gt;met an unfortunate end&lt;/a&gt;, and is being reposted now as an attempt to resurface some of the most popular posts that have been lost.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Before launching my blog, I’ve been searching for the perfect web host for it. I wanted to spend as little money as possible during the blog’s first days, so if something went wrong it wouldn’t be that bad. Besides, I had never bought any hosting plan, so I really wanted to try the alternative before considering spending money for hosting a blog. In this post I’ll share my experience on the four free web hosts I tried, and some more about the search I’ve been doing. If you’re considering to get a free hosting plan, believe me, you should really read this.&lt;/p&gt;

&lt;h2 id=&quot;host1free&quot;&gt;Host1Free&lt;/h2&gt;

&lt;p&gt;After an intensive search for the best free host, I gave Host1Free a try. Why? Many free hosts use banners or text ads in your site, whether you want them or not. Those that don’t do it usually give very small amounts of bandwidth and disk space (bandwidth is crucial if you’re planning on getting any visitors, and disk space will directly affect how much content you can have online). Host1Free, however, promises an astonishing 10GB disk space and 150GB bandwidth (monthly) with no forced ads on hosted sites, completely free! Besides, you also get 2 MySQL databases, the possibility to run PHP, a nice application installer, and more. These stats are really good for any rookie launching a blog or a website. And if it grows into something big, you can always upgrade to the premium hosting, that gives you all diskspace and bandwidth you want (and also unlimited MySQL databases and FTP accounts, possibility to run Perl, Python, Ruby on Rails, and more, secure webmail, much more support and so on). Perfect, right?&lt;/p&gt;

&lt;p&gt;So, what’s the catch?&lt;/p&gt;

&lt;p&gt;I never even gave the premium hosting a try, so I won’t talk about it, although I have my doubts about their claims. I also never got to test the free hosting promised limits, because I gave up on Host1Free too soon for that, so I won’t talk about those limits and believe they really offer that disk space and bandwidth to non-paying users.&lt;/p&gt;

&lt;p&gt;The first issue I noticed was speed. Really, this host was painfully slow. Sometimes, it would take half a minute to load simple text pages (and the other times weren’t much faster). For any website that is supposed to deliver value without frustrating its visitors to death, a 30-second waiting time on any page load is simply something you can’t let happen.&lt;/p&gt;

&lt;p&gt;However, it couldn’t be that bad. As my blog’s host it would be useless, but I could still use it for test purposes. I first used it to learn some PHP and integration with PHP and MySQL, and then used it to learn how to create a WordPress blog. I have to say that their application installer, Softaculous Auto Installer, is awesome, and installing WordPress with it was completely effortless.&lt;/p&gt;

&lt;p&gt;During my tests on that test-only blog, I found yet another big annoyance: Host1Free doesn’t force ads into the hosted sites, but it does force some code without telling you. The forced code doesn’t seem to make any difference in the displayed page, at least when Javascript is enabled. However, that HTML code is also put in the blog’s RSS feed. As RSS doesn’t support those tags, the blog’s feed gets corrupted, and thus becomes completely useless.&lt;/p&gt;

&lt;p&gt;I have had enough with this server. I wanted a host for my blog, and this wasn’t it.&lt;/p&gt;

&lt;h2 id=&quot;byehost&quot;&gt;ByeHost&lt;/h2&gt;

&lt;p&gt;My second stop was ByeHost, a free server without forced ads, featuring 5.5GB disk space, 200GB bandwidth, 50 MySQL databases, PHP, unlimited POP email accounts, another nice application installer, and more. ByeHost even managed to load pages faster than Host1Free (although that’s not really that hard). And when choosing your subdomain, you could have, among other less awesome options, &lt;code&gt;[yourname].isgreat.org&lt;/code&gt; (like &lt;code&gt;ricardolopes.isgreat.org&lt;/code&gt;). What could you ask more from a free service?&lt;/p&gt;

&lt;p&gt;However, the speed wasn’t good enough. The test-only blog would load a bit faster than the one in the previous host, but not fast enough for any blog trying to get returning visitors. By now, it’s becoming clear which is the no. 1 problem with free web hosts.&lt;/p&gt;

&lt;p&gt;Just like I did with the previous server, I still gave ByeHost a try for test purposes only. As it didn’t force any type of code in my pages, I could finally test drive WordPress, including its RSS feed.&lt;/p&gt;

&lt;p&gt;ByeHost’s application installer, Fantastico, was also able to install WordPress with no effort at all. However, it didn’t install WordPress on the site’s root, which led to some small issues. The bigger issue happened just some days later. Suddenly, all pages besides index.php, the main page, would not load, and a 404 Error page would appear. Even though 404 Error means that the page was not found, I still had all pages on the server, just like they were before this happened.&lt;/p&gt;

&lt;p&gt;Having a very slow blog is bad, but not being able to show a blog’s content is completely out of question.&lt;/p&gt;

&lt;p&gt;Next!&lt;/p&gt;

&lt;h2 id=&quot;zymic&quot;&gt;Zymic&lt;/h2&gt;

&lt;p&gt;This free server promised an ad-free hosting featuring 5GB disk space, 50GB bandwidth, 3 MySQL databases, PHP and so on (notice: for this article, I’ve first copied the information on Zymic’s start page, but then visited the page with the full features of the free hosting plan, and the numbers were lower there, so the start page has some misleading information). Not as great as the other servers I tried, but still more than I would ask from a free service.&lt;/p&gt;

&lt;p&gt;As you may have already guessed, the first issue I found was speed. Zymic’s free hosting service was as slow as Host1Free’s. So once again I had a host acceptable (but painful) for my WordPress experiments, but useless for hosting the real thing.&lt;/p&gt;

&lt;p&gt;Other small issues appeared, like some problems with the FTP account that were easily solved, not being able to choose one specific available subdomain, WordPress admin panel being unable to fetch its feeds and plugins list, PHP mail function disabled, and others. Zymic didn’t offer any application installer, so I had to manually install WordPress, which wasn’t a big deal at all.&lt;/p&gt;

&lt;p&gt;I used this host to test WordPress, and then to build my blog’s theme. I didn’t find any other major flaws, like the ones I found on the other servers. I still couldn’t use it to host the real blog, because of its speed, but at least I was able to finish its design and get ready to launch the real thing elsewhere.&lt;/p&gt;

&lt;p&gt;After finishing the blog design, I removed all files from Zymic. I was definitely not trying any more free hosts, and would go for a paid host for my blog.&lt;/p&gt;

&lt;h2 id=&quot;deluxe-host&quot;&gt;DeluXe Host&lt;/h2&gt;

&lt;p&gt;… Or was I?&lt;/p&gt;

&lt;p&gt;After deleting all my files on every free host I tried and studying the best paid hosting service for my blog, I received an email from DeluXe Host, saying my site was finally accepted, and I could now use their free server. Now that’s what I call timing.&lt;/p&gt;

&lt;p&gt;I have to say that their hosting service is definitely the best of all the free servers I tested. Loading speeds are actually pretty good, and although there’s no auto-installer, WordPress worked flawlessly after manual installation. After a few tests, I found no issues at all. So, what’s the catch?&lt;/p&gt;

&lt;p&gt;The first little problem I found was the server’s lack of support for .htaccess files. This means that some features are not configurable, such as the ability to change the permalinks of blog posts to something meaningful, instead of plain ID numbers (not a big problem, but still pretty bad for link sharing and SEO). But the big deal breaker was the lack of name servers. Without them, you can’t use your own domain name on your site, you’re forced to have a &lt;code&gt;dhost.info/[yourname]&lt;/code&gt; URL. Of course you could use an alias URL (like &lt;code&gt;.pt.vu&lt;/code&gt;), but then you couldn’t share blog posts links at all, since the URL would never change through pages.&lt;/p&gt;

&lt;p&gt;So this is not a bad host at all, but won’t do for anyone who needs more professional looking domains. Still a nice option if you don’t mind having a &lt;code&gt;dhost.info/[yourname]&lt;/code&gt; domain (and if you don’t mind the waiting time for approval).&lt;/p&gt;

&lt;h2 id=&quot;other-free-hosts&quot;&gt;Other free hosts&lt;/h2&gt;

&lt;p&gt;During my search, I stumbled upon many more free hosts. The main drawbacks that made me put them aside were usually at least one of the following:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Forced ads on webpages&lt;/li&gt;
  &lt;li&gt;Only English sites were accepted&lt;/li&gt;
  &lt;li&gt;Very strict limits on disk size, bandwidth or maximum file size&lt;/li&gt;
  &lt;li&gt;Mandatory regular activity in the host’s support forums&lt;/li&gt;
  &lt;li&gt;The site’s registration had to be manually accepted (I still haven’t received response from some of those hosts I tried)&lt;/li&gt;
  &lt;li&gt;The site was offline, and not just for a day&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Finally, I need to warn you about the popular host 000webhost.com. It looks like a nice free host, featuring 1.5GB disk space, 100GB bandwidth and so on. However, a quick search on Google will show you that it’s a scam. Many people have been reporting being kicked from the hosting service for no reason at all, and many of them had earned money from the host’s affiliate program, that they never received. Having a website that suddenly goes offline for no reason is awful, although you can’t complain much if you’re using a free service, but doing paid work and being kicked out before receiving the money is a serious matter.&lt;/p&gt;

&lt;h2 id=&quot;final-thoughts&quot;&gt;Final thoughts&lt;/h2&gt;

&lt;p&gt;This has been a very frustrating experience, as you can easily guess. Overall, there seems to be no acceptable free web host for any kind of serious website/blog. Their main drawback is speed, surely because no server administrator will want to have many resources allocated for the non-paying users. That makes it possible to raise the bandwidth limit, because at very low speeds you won’t be able to push many bandwidth anyway.&lt;/p&gt;

&lt;p&gt;I don’t know how’s the performance on forced ads hosts, as their clients can generate some profit from those ads, but having elements on pages that you can’t control is a big drawback for many websites/blogs (such as the forced scripts on Host1Free that corrupted the blog’s RSS feed).&lt;/p&gt;

&lt;p&gt;So if you want your site or blog online, based on my experience, you have two options: go for a paid hosting plan, or use the sites of the services you’re going to use (if you want a WordPress blog, you can register at WordPress.com to have it hosted on WordPress’s servers, instead of downloading it from WordPress.org and having to find a suitable host yourself).&lt;/p&gt;

&lt;p&gt;I’d love to hear you thoughts on free hosts, and your experience. Have any free web host actually worked right for you?&lt;/p&gt;

&lt;h2 id=&quot;update&quot;&gt;2015 update&lt;/h2&gt;

&lt;p&gt;This post is starting to feel old, but since it was still getting so much traffic and comments (lost with the old blog, unfortunately), I decided that it could still be useful. The best I can do now without rewriting the whole thing is giving a short summary of my recent experience.&lt;/p&gt;

&lt;p&gt;In short, the best free host that one can choose is probably &lt;a href=&quot;https://www.heroku.com&quot;&gt;Heroku&lt;/a&gt;, which provides many different environments (like PHP, to run a Wordpress install, or Ruby for a Ruby on Rails webapp). Its main problems are speed (if you’re not paying, your instance is put on stand by when no one is accessing it, which makes the next access very slow, as it has to wait for the instance to load again) and, if you’re planning on upgrading to a paying tier in the future, the prices aren’t the most competitive ones.&lt;/p&gt;

&lt;p&gt;Now that I switched my blog from Wordpress to Jekyll, a great free host that I could have chosen is &lt;a href=&quot;https://help.github.com/articles/using-jekyll-with-pages/&quot;&gt;Github Pages&lt;/a&gt;. I’m not using it, so I can’t tell the pros and cons, but I believe that it doesn’t have the speed issues other hosts have. A possible problem for some is that in the free tier you have to disclose the full source code of your webapp.&lt;/p&gt;

&lt;p&gt;All in all, my general recommendation still remains: if you’re looking for a host for anything serious or professional-looking, you’re better off willing to spend some money on it. Low-volume websites aren’t that expensive to host, and if you’re already paying, it’s much easier to scale in the future, and to get better customer support.&lt;/p&gt;
</description>
        <pubDate>Sun, 18 Jan 2015 00:00:00 +0000</pubDate>
        <link>http://ricardolopes.net/blog/my-experience-on-free-web-hosts</link>
        <guid isPermaLink="true">http://ricardolopes.net/blog/my-experience-on-free-web-hosts</guid>
        
        <category>Wordpress</category>
        
        <category>PHP</category>
        
        <category>MySQL</category>
        
        <category>blogging</category>
        
        <category>web host</category>
        
        
        <category>experience</category>
        
      </item>
    
      <item>
        <title>A postmortem of my WordPress blog</title>
        <description>&lt;p&gt;I have to say that, for a software developer and tech enthusiast, I’m kind of disappointed with myself. For around 4 years I’ve been maintaining my personal blog, a self-hosted WordPress install, where I would share projects, tips and rants, like the usual developer’s blog. However, for some reason I was finding less and less topics to talk about. Either I was too busy or exhausted to take the time to write meaningful posts, or the inspiration wasn’t simply there.&lt;/p&gt;

&lt;p&gt;At least as far as software developer’s standards go, I actually enjoy writing and documenting. I believe it helps sorting out the thoughts in your head, and definitely are a great tool for sharing knowledge. So it was actually bothering more than it should the fact that new blog posts would come too infrequently. This lead to long periods of time without visiting my own blog or taking a look at its visitors stats.&lt;/p&gt;

&lt;p&gt;After some very intense weeks with almost no free time and no Internet at home, I casually visited my blog to see how things were going, and what I saw left me completely off-guard at first, and irritated after that. The blog was completely broken, and all I could see was the message &lt;code&gt;Error establishing a database connection&lt;/code&gt;. The same message would appear if I tried to access the admin section. So it was as good as dead, with nothing I could do about it, and without a single warning.&lt;/p&gt;

&lt;p&gt;But how did that happen? Since when was my blog down? And how come did nothing trigger an alert during all that time?&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2015-01-10-ga.png&quot; alt=&quot;Google Analytics investigation&quot; /&gt;&lt;/p&gt;

&lt;p&gt;After checking what Google Analytics had to tell me, I realised that the blog must have been down since the 29th of October. Which means that it remained dead for almost a month (I found this in late November). A further look into the statistics showed that now most of my traffic was for my landing page (makes sense, since it’s unrelated to the WordPress install and didn’t suffer the same tragic fate). But there was also some traffic for some other pages. After more investigation I found out that some posts were still active, after all. This must have been because of the heavy caching that I was doing, which allowed cached pages to be displayed instead of hitting a failing CMS. I saved what I could, used my RSS feed to save some others, and the rest just got lost.&lt;/p&gt;

&lt;p&gt;My lack of participation was obviously resulting in a low number of visitors. Still enough to be able to easily tell when the database issue started just by looking at the graphs, but clearly not enough to form an audience that would alert me of these kind of issues. The fact that some of the most popular posts were still cached, and were typically accessed through Google searches, not by browsing within the blog, also contributed to this situation remaining undetected.&lt;/p&gt;

&lt;p&gt;About how it happened… I still have no clue. I hear how WordPress might be insecure if not always up-to-date or if you installed the wrong plugin, so I decided I should just assume the worst and go ahead and delete the whole installation and think of &lt;a href=&quot;/blog/my-personal-blog-2-0&quot;&gt;what to do next&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;So that’s my story: I maintained my personal blog for around 4 years, although it wasn’t really getting the love it deserved, and at some point it just died without me noticing it for almost a month. Now with this second one I’m expecting things to get more manageable and new content to show up more frequently. Time will tell.&lt;/p&gt;
</description>
        <pubDate>Sun, 11 Jan 2015 00:00:00 +0000</pubDate>
        <link>http://ricardolopes.net/blog/a-postmortem-of-my-wordpress-blog</link>
        <guid isPermaLink="true">http://ricardolopes.net/blog/a-postmortem-of-my-wordpress-blog</guid>
        
        <category>Wordpress</category>
        
        <category>blogging</category>
        
        
        <category>meta</category>
        
      </item>
    
      <item>
        <title>My personal blog 2.0</title>
        <description>&lt;p&gt;For around 4 years I’ve been maintaining my own personal blog, a self-hosted WordPress install, where I usually talked about things I was working with, cool tricks that I learned and wanted to share the knowledge, and so on. The typical dev blog. However, sometimes it faced some periods of inactivity, either by lack of time, energy or inspiration. And then the worst happened.&lt;/p&gt;

&lt;p&gt;After some weeks of very limited Internet access and close to no free time, I decided to take a look at my blog, and what I saw was a completely broken site. There was a problem in the database connection, an that completely killed all its pages, including the admin section. So my blog was as good as dead and I didn’t even know about it before casually trying to visit it.&lt;/p&gt;

&lt;p&gt;I’ll leave the details for a later post (update: it’s &lt;a href=&quot;/blog/a-postmortem-of-my-wordpress-blog&quot;&gt;here&lt;/a&gt;!). Long story short, I lost the work of these 4 years because of some unknown problem and had to shut down my Wordpress blog.&lt;/p&gt;

&lt;p&gt;This post is, then, a new start. After that experience, this time I dropped Wordpress and PHP and went for &lt;a href=&quot;http://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt; and Ruby. One of the main reasons is that Jekyll pre-generates static pages, instead of keeping a server running to access a database and render dynamic pages. So I’m not expecting to have these kind of issues from now on. More details about Jekyll, its advantages and cool tricks I learned will come in future posts.&lt;/p&gt;

&lt;p&gt;This new start allowed me to change how some things worked in my blog, now that I could break compatibility with the past. I also used this opportunity to merge my website and blog into one project and give them a new custom-built theme.&lt;/p&gt;

&lt;p&gt;I recovered some of the old posts through the RSS feed and Google cache and will repost the most popular ones, so that their useful information doesn’t get lost with the rest of the old blog. And, of course, brand new content is also waiting to be published.&lt;/p&gt;

&lt;p&gt;So… welcome again to my personal blog, second edition.&lt;/p&gt;
</description>
        <pubDate>Sat, 03 Jan 2015 00:00:00 +0000</pubDate>
        <link>http://ricardolopes.net/blog/my-personal-blog-2-0</link>
        <guid isPermaLink="true">http://ricardolopes.net/blog/my-personal-blog-2-0</guid>
        
        <category>Wordpress</category>
        
        <category>Jekyll</category>
        
        <category>PHP</category>
        
        <category>Ruby</category>
        
        <category>blogging</category>
        
        
        <category>meta</category>
        
      </item>
    
  </channel>
</rss>
